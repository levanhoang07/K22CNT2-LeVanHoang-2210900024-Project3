<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<style>
   /* ƒê·ªãnh d·∫°ng t·ªïng th·ªÉ */
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 20px;
    padding: 0;
}

/* Ti√™u ƒë·ªÅ */
h2 {
    text-align: center;
    color: #333;
}

/* Container c·ªßa n√∫t th√™m */
.btn-container {
    text-align: right;
    margin-bottom: 15px;
}

/* B·∫£ng hi·ªÉn th·ªã */
table {
    width: 100%;
    border-collapse: collapse;
    background-color: white;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    overflow: hidden;
}

/* Ti√™u ƒë·ªÅ b·∫£ng */
thead {
    background-color: #6666FF;
    color: white;
}

th, td {
    padding: 12px;
    text-align: left;
    border: 1px solid #ddd; /* Added border between table cells */
}

/* D√≤ng ch·∫µn c√≥ m√†u n·ªÅn nh·∫°t */
tbody tr:nth-child(even) {
    background-color: #f9f9f9;
}

/* Hi·ªáu ·ª©ng hover */
tbody tr:hover {
    background-color: #f1f1f1;
}

/* ƒê·ªãnh d·∫°ng √¥ m·∫≠t kh·∫©u */
.password-container {
    display: flex;
    align-items: center;
}

.password-field {
    border: none;
    background: none;
    font-size: 14px;
    width: 120px;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

/* N√∫t ·∫©n/hi·ªán m·∫≠t kh·∫©u */
.an-hien-password {
    border: none;
    background: none;
    cursor: pointer;
    font-size: 16px;
    margin-left: 5px;
}

/* N√∫t chung */
.btn {
    display: inline-block;
    padding: 8px 12px;
    text-decoration: none;
    border-radius: 5px;
    transition: all 0.3s;
}

/* N√∫t Th√™m */
.btn-primary {
    background-color: #6666FF;
    color: white;
}

.btn-primary:hover {
    background-color: #5757E6;
}

/* N√∫t Ch·ªânh s·ª≠a */
.edit-btn {
    background-color: #ffc107;
    color: white;
}

.edit-btn:hover {
    background-color: #e0a800;
}

/* N√∫t X√≥a */
.delete-btn {
    background-color: #dc3545;
    color: white;
    margin-left: 5px;
}

.delete-btn:hover {
    background-color: #c82333;
}

/* N√∫t Quay l·∫°i */
.btn-back {
    display: block;
    width: fit-content;
    margin: 20px auto;
    background-color: #6c757d;
    color: white;
    padding: 10px 15px;
}

.btn-back:hover {
    background-color: #5a6268;
}
</style>

<meta charset="UTF-8">
<h2>Danh S√°ch Qu·∫£n Tr·ªã Vi√™n</h2>

<div class="btn-container">
   
</div>

<table>
    <thead>
        <tr>
            <th>ID</th>
            <th>H·ªç T√™n</th>
            <th>T√™n ƒêƒÉng Nh·∫≠p</th>
            <th>M·∫≠t kh·∫©u</th>
            <th>Email</th>
            <th>S·ªë ƒêi·ªán Tho·∫°i</th>
            <th>Thao T√°c</th>
        </tr>
    </thead>
    <tbody>
        <c:forEach var="quanTri" items="${list}">
            <tr>
                <td>${quanTri.lvhMaQuanTri}</td>
                <td>${quanTri.lvhHoTen}</td>
                <td>${quanTri.lvhTenDangNhap}</td>
                <td>
                    <div class="password-container">
                        <input type="password" class="password-field" value="${quanTri.lvhMatKhau}" readonly>
                        <button class="an-hien-password">üôà</button>
                    </div>
                </td>
                <td>${quanTri.lvhEmail}</td>
                <td>${quanTri.lvhSoDienThoai}</td>
                <td>
                    <a href="${pageContext.request.contextPath}/quanli/add" class="btn btn-primary">Th√™m</a>|
                    <a href="${pageContext.request.contextPath}/quanli/edit/${quanTri.lvhMaQuanTri}" class="btn edit-btn">S·ª≠a</a>|
                    <a href="${pageContext.request.contextPath}/quanli/delete/${quanTri.lvhMaQuanTri}" class="btn delete-btn" onclick="return confirm('B·∫°n ch·∫Øc ch·∫Øn mu·ªën x√≥a?')">X√≥a</a>
                </td>
            </tr>
        </c:forEach>
    </tbody>
</table>

<a href="/K22CNT2-LVH-2210900024-Project3/qladmin" class="btn btn-back">Tr·ªü v·ªÅ menu qu·∫£n tr·ªã</a>

<script>
    document.querySelectorAll('.an-hien-password').forEach(button => {
        button.addEventListener('click', function () {
            let input = this.previousElementSibling;
            if (input.type === "password") {
                input.type = "text";
                this.textContent = "üôâ";
            } else {
                input.type = "password";
                this.textContent = "üôà";
            }
        });
    });
</script>
